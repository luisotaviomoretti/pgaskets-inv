class n extends EventTarget{emitWorkOrderCompleted(e){console.log("🚀 Work Order completed event emitted:",e),this.dispatchEvent(new CustomEvent("workOrderCompleted",{detail:e}))}emitMovementCreated(e){console.log("📝 Movement created event emitted:",e),this.dispatchEvent(new CustomEvent("movementCreated",{detail:e}))}emitMovementsRefreshRequested(e){console.log("🔄 Movements refresh requested by:",e),this.dispatchEvent(new CustomEvent("movementsRefreshRequested",{detail:{source:e}}))}onWorkOrderCompleted(e){const r=e;return this.addEventListener("workOrderCompleted",r),()=>this.removeEventListener("workOrderCompleted",r)}onMovementCreated(e){const r=e;return this.addEventListener("movementCreated",r),()=>this.removeEventListener("movementCreated",r)}onMovementsRefreshRequested(e){const r=e;return this.addEventListener("movementsRefreshRequested",r),()=>this.removeEventListener("movementsRefreshRequested",r)}}const t=new n;function d(){return{emitWorkOrderCompleted:t.emitWorkOrderCompleted.bind(t),emitMovementCreated:t.emitMovementCreated.bind(t),emitMovementsRefreshRequested:t.emitMovementsRefreshRequested.bind(t),onWorkOrderCompleted:t.onWorkOrderCompleted.bind(t),onMovementCreated:t.onMovementCreated.bind(t),onMovementsRefreshRequested:t.onMovementsRefreshRequested.bind(t)}}export{d as u};
